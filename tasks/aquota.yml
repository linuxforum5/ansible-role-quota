---
- name: Enable and configue quotas using aquota
  block:

    - name: "{{ quota_device }}:{{ quota_name }} present in /etc/quotatab"
      ansible.builtin.lineinfile:
        dest: /etc/quotatab
        line: "{{ quota_device }}:{{ quota_name }}"
        state: present
      notify: Restart quota

    - name: "Touch {{ quota_dir }}/aquota.user"
      ansible.builtin.file:
        path: "{{ quota_dir }}/aquota.user"
        state: touch
        access_time: preserve
        modification_time: preserve
        owner: root
        group: root
        mode: 0600
      notify: Restart quota

    - name: Update /etc/fstab to ensure quota, usrjquota=aquota.user and jqfmt=vfsv0 are included in device options
      block:

        - name: Set a fact for the list of required options in /etc/fstab
          ansible.builtin.set_fact:
            quota_device_aquota_options: "{{ quota_device_options | union(quota_device_aquota_options_required) | join(',') }}"

        - name: Debug list of required options in /etc/fstab
          ansible.builtin.debug:
            var: quota_device_aquota_options
            verbosity: 2

        - name: Quota device remounted with required options
          ansible.posix.mount:
            path: "{{ quota_dir }}"
            src: "{{ quota_device }}"
            fstype: "{{ quota_device_fstype }}"
            opts: "{{ quota_device_aquota_options }}"
            state: present
          register: quota_fstab_updated

        - name: Reboot
          ansible.builtin.reboot:
            msg: "The server is being rebooted to ensure that the quota options are applied to {{ quota_device }}"
          when: (quota_fstab_updated is defined) and (quota_fstab_updated.changed | bool)

      when: ("quota" not in quota_device_options) or ("usrjquota=aquota.user" not in quota_device_options) or ("jqfmt=vfsv0" not in quota_device_options)

    - name: Quota enabled and running
      ansible.builtin.service:
        name: quota
        state: started

    - name: "Run quotaon {{ quota_dir }}"
      ansible.builtin.command: "quotaon {{ quota_dir }}"
      register: quota_quotaon
      when: not quota_enabled
      failed_when: ("Cannot find filesystem to check or filesystem not mounted with quota option" in quota_quotaon.stdout)

    - name: Debug quotaon results
      ansible.builtin.debug:
        var: quota_quotaon
        verbosity: 2
      when: quota_quotaon is defined

    - name: "Set the gracetimes for {{ quota_dir }}"
      ansible.builtin.command: "setquota -t {{ quota_grace_block }} {{ quota_grace_inode }} {{ quota_dir }}"
      when:
        - quota_quotaon is defined
        - ((quota_existing_grace_block | int) != (quota_grace_block | int)) or ((quota_existing_grace_inode | int) != (quota_grace_inode | int))

    - name: Quota warning config in place
      ansible.builtin.template:
        src: warnquota.conf.j2
        dest: /etc/warnquota.conf
        owner: root
        group: root
        mode: 0644

    - name: Quota warning defaults in place
      ansible.builtin.template:
        src: quota.j2
        dest: /etc/default/quota
        owner: root
        group: root
        mode: 0644

    - name: Warn that a reboot might be needed
      ansible.builtin.debug:
        msg: "You might need to reboot this server before the disk quotas are applied"
      when: not quota_enabled

  tags:
    - quota
    - quota_aquota
...
